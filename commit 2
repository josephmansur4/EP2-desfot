import random

class Navio:
    def __init__(self, nome, tamanho):
        self.nome = nome
        self.tamanho = tamanho
        self.coordenadas = []

    def esta_afundado(self):
        return all(coord[2] for coord in self.coordenadas)

class Tabuleiro:
    def __init__(self):
        self.tamanho = 10
        self.grade = [["~" for _ in range(self.tamanho)] for _ in range(self.tamanho)]
        self.navios = []

    def pode_colocar_navio(self, navio, linha, coluna, horizontal):
        if horizontal:
            if coluna + navio.tamanho > self.tamanho:
                return False
            for i in range(navio.tamanho):
                if self.grade[linha][coluna + i] != "~":
                    return False
        else:
            if linha + navio.tamanho > self.tamanho:
                return False
            for i in range(navio.tamanho):
                if self.grade[linha + i][coluna] != "~":
                    return False
        return True

    def colocar_navio(self, navio, linha, coluna, horizontal):
        if self.pode_colocar_navio(navio, linha, coluna, horizontal):
            for i in range(navio.tamanho):
                if horizontal:
                    navio.coordenadas.append([linha, coluna + i, False])
                    self.grade[linha][coluna + i] = navio.nome[0]
                else:
                    navio.coordenadas.append([linha + i, coluna, False])
                    self.grade[linha + i][coluna] = navio.nome[0]
            self.navios.append(navio)

    def imprimir_tabuleiro(self, revelar=False):
        print("  " + " ".join(map(str, range(1, self.tamanho + 1))))
        for r in range(self.tamanho):
            linha = ""
            for c in range(self.tamanho):
                if revelar:
                    linha += self.grade[r][c] + " "
                else:
                    linha += ("X" if self.grade[r][c] != "~" and not any([r, c, True] in s.coordenadas for s in self.navios) else self.grade[r][c]) + " "
            print(chr(65 + r) + " " + linha)

    def realizar_disparo(self, linha, coluna):
        if self.grade[linha][coluna] == "~":
            print("Errou!")
            self.grade[linha][coluna] = "o"
            return False
        for navio in self.navios:
            for coord in navio.coordenadas:
                if coord[0] == linha and coord[1] == coluna and not coord[2]:
                    coord[2] = True  # Acertou parte do navio
                    print(f"Acertou o {navio.nome}!")
                    if navio.esta_afundado():
                        print(f"Você afundou meu {navio.nome}!")
                    return True
        return False

    def todos_navios_afundados(self):
        return all(navio.esta_afundado() for navio in self.navios)

def colocacao_aleatoria(tabuleiro, navios):
    for navio in navios:
        while True:
            linha = random.randint(0, tabuleiro.tamanho - 1)
            coluna = random.randint(0, tabuleiro.tamanho - 1)
            horizontal = random.choice([True, False])
            if tabuleiro.pode_colocar_navio(navio, linha, coluna, horizontal):
                tabuleiro.colocar_navio(navio, linha, coluna, horizontal)
                break

def turno_humano(tabuleiro):
    while True:
        try:
            coordenadas = input("Digite as coordenadas (linha, coluna), ex. A5: ").upper()
            linha = ord(coordenadas[0]) - 65
            coluna = int(coordenadas[1:]) - 1
            if tabuleiro.realizar_disparo(linha, coluna):
                break
            else:
                break
        except (ValueError, IndexError):
            print("Coordenadas inválidas. Tente novamente.")

def turno_computador(tabuleiro):
    while True:
        linha = random.randint(0, tabuleiro.tamanho - 1)
        coluna = random.randint(0, tabuleiro.tamanho - 1)
        if tabuleiro.grade[linha][coluna] == "~":
            print(f"Computador mirou em {chr(65 + linha)}{coluna + 1}")
            tabuleiro.realizar_disparo(linha, coluna)
            break

def principal():
    tabuleiro_humano = Tabuleiro()
    tabuleiro_computador = Tabuleiro()
    navios = [Navio("Porta-Aviões", 5), Navio("Couraçado", 4), Navio("Cruzador", 3), Navio("Submarino", 3), Navio("Destruidor", 2)]

    # Colocar navios aleatoriamente para humano e computador
    print("Colocando seus navios...")
    colocacao_aleatoria(tabuleiro_humano, navios)
    colocacao_aleatoria(tabuleiro_computador, [Navio(n.nome, n.tamanho) for n in navios])

    # Loop principal do jogo
    while True:
        print("\nSeu tabuleiro:")
        tabuleiro_humano.imprimir_tabuleiro(revelar=True)
        print("\nTabuleiro do computador:")
        tabuleiro_computador.imprimir_tabuleiro()

        turno_humano(tabuleiro_computador)
        if tabuleiro_computador.todos_navios_afundados():
            print("Parabéns! Você ganhou!")
            break

        turno_computador(tabuleiro_humano)
        if tabuleiro_humano.todos_navios_afundados():
            print("Infelizmente, você perdeu!")
            break

if __name__ == "__main__":
    principal()
