import random

# Funções auxiliares
def cria_mapa(tamanho):
    return [[' ' for _ in range(tamanho)] for _ in range(tamanho)]

def posicao_suporta(mapa, tamanho_navio, linha, coluna, orientacao):
    n = len(mapa)
    if orientacao == 'v':
        if linha + tamanho_navio > n:
            return False
for i in range(tamanho_navio):
            if mapa[linha + i][coluna] != ' ':
                return False
    elif orientacao == 'h':
        if coluna + tamanho_navio > n:
            return False
        for i in range(tamanho_navio):
            if mapa[linha][coluna + i] != ' ':
                return False
    return True

def aloca_navios(mapa, tamanhos_navios):
    for tamanho in tamanhos_navios:
        while True:
linha = random.randint(0, len(mapa) -1)
            coluna = random.randint(0, len(mapa) -1)
            orientacao = random.choice(['h', 'v'])
            if posicao_suporta(mapa, tamanho, linha, coluna, orientacao):
                if orientacao == 'v':
for i in range(tamanho):
                        mapa[linha + i][coluna] = 'N'
                else:
                    for i in range(tamanho):
                        mapa[linha][coluna + i] = 'N'
                break

def foi_derrotado(matriz):
    return all('N' not in linha for linha in matriz)
def print_mapa(mapa):
    colunas = 'ABCDEFGHIJ'[:len(mapa)]
    print("  " + " ".join(colunas))
    for i in range(len(mapa)):
        linha = mapa[i]
        linha_str = " ".join(linha)
        print(f"{i+1:2} {linha_str}")
def aloca_navios_humano(mapa, tamanhos_navios):
    print("Por favor, aloque seus navios no mapa:")
    print_mapa(mapa)
    for tamanho in tamanhos_navios:
        while True:
            print(f"Navio de tamanho {tamanho}:")
            linha = int(input("Linha (1 a {}): ".format(len(mapa)))) - 1
            coluna = input("Coluna (A a J): ").upper()
            coluna = 'ABCDEFGHIJ'.index(coluna)
            orientacao = input("Orientação (vertical 'v' ou horizontal 'h'): ")
            if posicao_suporta(mapa, tamanho, linha, coluna, orientacao):
                for i in range(tamanho):
                    if orientacao == 'v':
                        mapa[linha + i][coluna] = 'N'
                    else:
                        mapa[linha][coluna + i] = 'N'
                print_mapa(mapa)
                break
            else:
                print("Posição inválida ou ocupada, tente novamente.")
