import random
CONFIGURACAO = {
    'destroyer': 3,
    'porta-avioes': 5,
    'submarino': 2,
    'torpedeiro': 3,
    'cruzador': 2,
    'couracado': 4
}

PAISES =  {
    'Brasil': {
        'cruzador': 1,
        'torpedeiro': 2,
        'destroyer': 1,
        'couracado': 1,
        'porta-avioes': 1
    }, 
    'França': {
        'cruzador': 3, 
        'porta-avioes': 1, 
        'destroyer': 1, 
        'submarino': 1, 
        'couracado': 1
    },
    'Austrália': {
        'couracado': 1,
        'cruzador': 3, 
        'submarino': 1,
        'porta-avioes': 1, 
        'torpedeiro': 1
    },
    'Rússia': {
        'cruzador': 1,
        'porta-avioes': 1,
        'couracado': 2,
        'destroyer': 1,
        'submarino': 1
    },
    'Japão': {
        'torpedeiro': 2,
        'cruzador': 1,
        'destroyer': 2,
        'couracado': 1,
        'submarino': 1
    }
}


ALFABETO = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

CORES = {
    'reset': '\u001b[0m',
    'red': '\u001b[31m',
    'black': '\u001b[30m',
    'green': '\u001b[32m',
    'yellow': '\u001b[33m',
    'blue': '\u001b[34m',
    'magenta': '\u001b[35m',
    'cyan': '\u001b[36m',
    'white': '\u001b[37m'
}

def cria_mapa(tamanho):
    return [[' ' for _ in range(tamanho)] for _ in range(tamanho)]

def posicao_suporta(mapa, tamanho_navio, linha, coluna, orientacao):
    n = len(mapa)
    if orientacao == 'v':
        if linha + tamanho_navio > n:
            return False
for i in range(tamanho_navio):
            if mapa[linha + i][coluna] != ' ':
                return False
    elif orientacao == 'h':
        if coluna + tamanho_navio > n:
            return False
        for i in range(tamanho_navio):
            if mapa[linha][coluna + i] != ' ':
                return False
    return True

def aloca_navios(mapa, tamanhos_navios):
    for tamanho in tamanhos_navios:
        while True:
linha = random.randint(0, len(mapa) -1)
            coluna = random.randint(0, len(mapa) -1)
            orientacao = random.choice(['h', 'v'])
            if posicao_suporta(mapa, tamanho, linha, coluna, orientacao):
                if orientacao == 'v':
for i in range(tamanho):
                        mapa[linha + i][coluna] = 'N'
                else:
                    for i in range(tamanho):
                        mapa[linha][coluna + i] = 'N'
                break

def foi_derrotado(matriz):
    return all('N' not in linha for linha in matriz)
def print_mapa(mapa):
    colunas = 'ABCDEFGHIJ'[:len(mapa)]
    print("  " + " ".join(colunas))
    for i in range(len(mapa)):
        linha = mapa[i]
        linha_str = " ".join(linha)
        print(f"{i+1:2} {linha_str}")
def aloca_navios_humano(mapa, tamanhos_navios):
    print("Por favor, aloque seus navios no mapa:")
    print_mapa(mapa)
    for tamanho in tamanhos_navios:
        while True:
            print(f"Navio de tamanho {tamanho}:")
            linha = int(input("Linha (1 a {}): ".format(len(mapa)))) - 1
            coluna = input("Coluna (A a J): ").upper()
            coluna = 'ABCDEFGHIJ'.index(coluna)
            orientacao = input("Orientação (vertical 'v' ou horizontal 'h'): ")
            if posicao_suporta(mapa, tamanho, linha, coluna, orientacao):
                for i in range(tamanho):
                    if orientacao == 'v':
                        mapa[linha + i][coluna] = 'N'
                    else:
                        mapa[linha][coluna + i] = 'N'
                print_mapa(mapa)
                break
            else:
                print("Posição inválida ou ocupada, tente novamente.")
def jogo_batalha_naval():
    tamanho_mapa = 10
    tamanhos_navios = [5, 4, 3, 3, 2]  # Tamanhos clássicos dos navios
    mapa_humano = cria_mapa(tamanho_mapa)
    mapa_computador = cria_mapa(tamanho_mapa)
    mapa_computador_oculto = cria_mapa(tamanho_mapa)

    aloca_navios_humano(mapa_humano, tamanhos_navios)
    aloca_navios(mapa_computador, tamanhos_navios)

    turno_humano = random.choice([True, False])

    while not (foi_derrotado(mapa_humano) or foi_derrotado(mapa_computador)):
        if turno_humano:
            print("Sua vez de atacar:")
            print_mapa(mapa_computador_oculto)
            linha = int(input("Escolha a linha (1 a 10): ")) - 1
            coluna = input("Escolha a coluna (A a J): ").upper()
            coluna = 'ABCDEFGHIJ'.index(coluna)
if mapa_computador[linha][coluna] == 'N':
                print("Você acertou um navio!")
                mapa_computador_oculto[linha][coluna] = 'X'
            else:
                print("água.")
                mapa_computador_oculto[linha][coluna] = 'A'
            turno_humano = False
        else:
            print("Vez do computador atacar.")
            linha, coluna = random.randint(0, tamanho_mapa - 1), random.randint(0, tamanho_mapa - 1)

            if mapa_humano[linha][coluna] == 'N':
                print("O computador acertou um dos seus navios!")
                mapa_humano[linha][coluna] = 'X'
            else:
                print("O computador atirou na água.")
            turno_humano = True
 if foi_derrotado(mapa_humano):
            print("Perdedor!")
            break
        elif foi_derrotado(mapa_computador):
            print("Vencendor!")
            break

# Iniciar o jogo
jogo_batalha_naval()
